# -*- coding: utf-8 -*-
"""edabit-soru-çözümü.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Fitumy1qbcZWEayca2WrV0LV-rGH0Ws_
"""

#  https://edabit.com/challenge/G9QRtAGXb9Cu368Pw
def combinations(*params):
  total = 1
  for i in params:
    if i < 1:
      break
    total *= i
  return total

print(combinations(2, 3,0, 4, 5))

# https://edabit.com/challenge/Y5Ji2HDnQTX7MxeHt
def snakefill(param):
  count = 0
  size = 1
  if param < 0:
    return "yanlış değer girdiniz"
  while size < (param ** 2) / 2:
    count += 1
    size *= 2 
  return count


snakefill(-24)

# https://edabit.com/challenge/KHPFPaKpXmDeRoYQ3
def check_score(param):
  new_dict = {"#" : 5, "O" :3, "X" : 1, "!" : -1, "!!" : -3, "!!!" : -5}
  result = [ new_dict[x] for i in param for x in i]
  return sum(result) if sum(result) > 0 else 0




check_score([
  ["#", "O", "#", "!!", "X", "!!", "#", "O", "O", "!!", "#", "X", "#", "O"],
  ["!!!", "!!!", "!!", "!!", "!", "!", "X", "!", "!!!", "O", "!", "!!!", "X", "#"],
  ["#", "X", "#", "!!!", "!", "!!", "#", "#", "!!", "X", "!!", "!!!", "X", "O"],
  ["!!", "X", "!!", "!!", "!!!", "#", "O", "O", "!!!", "#", "O", "O", "#", "!!"],
  ["O", "X", "#", "!", "!", "X", "!!!", "O", "!!!", "!!", "O", "!", "O", "X"],
  ["!!", "!!!", "X", "!!!", "!!", "!!", "!!!", "X", "O", "!", "#", "!!", "!!", "!!!"],
  ["!!", "!!", "#", "O", "!", "!!", "!", "!!!", "#", "O", "#", "!", "#", "!!"],
  ["X", "X", "O", "X", "!!!", "#", "!!!", "!!!", "X", "X", "X", "!", "#", "!!"],
  ["O", "!!!", "!", "O", "#", "!", "!", "#", "X", "X", "#", "O", "!!", "!"],
  ["X", "!", "!!", "#", "#", "X", "!!", "O", "!!", "X", "X", "!!", "#", "X"],
  ["!", "!!", "!!", "O", "!!", "!!", "#", "#", "!", "!!!", "O", "!", "#", "#"],
  ["!", "!!!", "!!", "X", "!!", "!!", "#", "!!!", "O", "!!", "!!!", "!", "!", "!"],
  ["!!!", "!!!", "!!", "O", "!", "!", "!!!", "!!!", "!!", "!!", "X", "!", "#", "#"],
  ["O", "O", "#", "O", "#", "!", "!!!", "X", "X", "O", "!", "!!!", "X", "O"]
])

# https://edabit.com/challenge/W8imhL66osEpK2ANs
rate = {
  "people": 10,
  "walls": 10,
  "minutes": 22
}

def time(rate, people, walls):
  one_wall_time = (rate["minutes"] * rate["people"]) //rate["walls"]
  minute = (one_wall_time * walls) // people
  return minute


time(rate,8, 15)

# https://edabit.com/challenge/5bYXQfpyoithnQisa

def encode_morse(param):
  char_to_dots = {
  'A': '.-', 'B': '-...', 'C': '-.-.', 'D': '-..', 'E': '.', 'F': '..-.',
  'G': '--.', 'H': '....', 'I': '..', 'J': '.---', 'K': '-.-', 'L': '.-..',
  'M': '--', 'N': '-.', 'O': '---', 'P': '.--.', 'Q': '--.-', 'R': '.-.',
  'S': '...', 'T': '-', 'U': '..-', 'V': '...-', 'W': '.--', 'X': '-..-',
  'Y': '-.--', 'Z': '--..', ' ': ' ', '0': '-----',
  '1': '.----', '2': '..---', '3': '...--', '4': '....-', '5': '.....',
  '6': '-....', '7': '--...', '8': '---..', '9': '----.',
  '&': '.-...', "'": '.----.', '@': '.--.-.', ')': '-.--.-', '(': '-.--.',
  ':': '---...', ',': '--..--', '=': '-...-', '!': '-.-.--', '.': '.-.-.-',
  '-': '-....-', '+': '.-.-.', '"': '.-..-.', '?': '..--..', '/': '-..-.'
  }

  # string = ""
  # for i in param.upper():
  #   string += char_to_dots[i] + " "
  # return string.strip()

  return " ".join([char_to_dots[i] for i in param.upper()])



encode_morse("EDABBIT CHALLENGE")

". -.. .- -... -... .. -   -.-. .... .- .-.. .-.. . -. --. ."